class MyHashSet:

    def __init__(self):
        self.bucket_size = 1000
        self.buckets = [[] for _ in range(self.bucket_size)]
        
    def _hash(self, key: int) -> int:
        return key % self.bucket_size

    def add(self, key: int) -> None:
        b = self.buckets[self._hash(key)]
        if key not in b:
            b.append(key)

    def remove(self, key: int) -> None:
        b = self.buckets[self._hash(key)]
        if key in b:
            b.remove(key)

    def contains(self, key: int) -> bool:
        b = self.buckets[self._hash(key)]
        return key in b


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)
